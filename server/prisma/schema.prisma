// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  passwordHash String
  name         String?
  avatar       String?
  role         Role     @default(CUSTOMER)
  createdAt    DateTime @default(now())
  orders       Order[]
  reviews      Review[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  slug     String    @unique
  products Product[]
}

model Product {
  id          Int      @id @default(autoincrement())
  title       String
  slug        String   @unique
  description String
  priceCents  Int
  imageUrl    String
  isActive    Boolean  @default(true)
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  Int
  orderItems  OrderItem[]
  reviews     Review[]
}

model Order {
  id         Int         @id @default(autoincrement())
  status     OrderStatus @default(PENDING)
  totalCents Int
  createdAt  DateTime    @default(now())
  user       User?       @relation(fields: [userId], references: [id])
  userId     Int?
  items      OrderItem[]
}

model OrderItem {
  id         Int     @id @default(autoincrement())
  quantity   Int
  priceCents Int
  order      Order   @relation(fields: [orderId], references: [id])
  orderId    Int
  product    Product @relation(fields: [productId], references: [id])
  productId  Int
}

model Review {
  id        Int      @id @default(autoincrement())
  rating    Int      // 1-5 stars
  comment   String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  
  @@unique([userId, productId]) // One review per user per product
}

enum Role {
  ADMIN
  CUSTOMER
}

enum OrderStatus {
  PENDING
  PAID
  FULFILLED
}
